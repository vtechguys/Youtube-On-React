webpackJsonp([2],{157:function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var l=n(0),c=n.n(l),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function(e){function t(){return a(this,t),r(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"handleChange",value:function(e){console.log(e)}},{key:"render",value:function(){var e=this;return c.a.createElement("div",{className:"upload"},c.a.createElement("div",{className:"container"},c.a.createElement("div",{className:"upload-grids"},c.a.createElement("div",{className:"upload-right"},c.a.createElement("div",{className:"upload-file"},c.a.createElement("div",{className:"services-icon"},c.a.createElement("span",{className:"glyphicon glyphicon-open","aria-hidden":"true"})),c.a.createElement("input",{type:"file",onChange:function(t){return e.handleChange(t.target.files)}})),c.a.createElement("div",{className:"upload-info"},c.a.createElement("h5",null,"Select files to upload"),c.a.createElement("span",null,"or"),c.a.createElement("p",null,"Drag and drop files"))))))}}]),t}(l.Component);t.default=u}});
//# sourceMappingURL=2.8ad7f49d.chunk.js.map